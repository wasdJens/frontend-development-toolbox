"use strict";(self.webpackChunkdocusaurus_docs=self.webpackChunkdocusaurus_docs||[]).push([[1666],{3463:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var a=t(5893),o=t(1151);const i={},s="About Building Blocks Concept",r={id:"learning/Angular/Explanation/building-blocks",title:"About Building Blocks Concept",description:"Background",source:"@site/docs/learning/Angular/Explanation/building-blocks.mdx",sourceDirName:"learning/Angular/Explanation",slug:"/learning/Angular/Explanation/building-blocks",permalink:"/software-engineering-toolbox/docs/learning/Angular/Explanation/building-blocks",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"About Anti Corruption Layer",permalink:"/software-engineering-toolbox/docs/learning/Angular/Explanation/anti-corruption-layer"},next:{title:"About Smart and Dumb Component Concept",permalink:"/software-engineering-toolbox/docs/learning/Angular/Explanation/smart-and-dumb-components"}},l={},c=[{value:"Background",id:"background",level:2},{value:"Building Blocks Concept",id:"building-blocks-concept",level:2}];function u(e){const n={h1:"h1",h2:"h2",p:"p",...(0,o.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"about-building-blocks-concept",children:"About Building Blocks Concept"}),"\n",(0,a.jsx)(n.h2,{id:"background",children:"Background"}),"\n",(0,a.jsx)(n.p,{children:"The reason for the building block approach is to create a system where different use cases / features are combined and can easily be reused.\nFor example your organization creates multiple applications but all of them use the same login mechanism.\nThis login mechanism is therefore the perfect candidate for a building block that other developers can easily integrate and use.\nBut the same applies to user interfaces that you create for your applications. Often customers want to see the same information on multiple different pages.\nTherefore smart components are also often a good candidate for a building block."}),"\n",(0,a.jsx)(n.h2,{id:"building-blocks-concept",children:"Building Blocks Concept"}),"\n",(0,a.jsx)(n.p,{children:"A building block approach is often linked to a library approach. You have a set of building blocks that you can use in your applications.\nThe library solution allows that different teams work on a set of features and also maintain them. In return it reduces the time it takes to implement a new feature because you can reuse existing building blocks.\nIt also hides a certain complexity that certain building blocks are based on. For example a login mechanism can be quite complex and therefore it is good to have a team that maintains this building block."}),"\n",(0,a.jsx)(n.p,{children:"Many teams often prefer to maintain these things on their own but this often leads to a lot of duplicated code and therefore a lot of maintenance effort.\nAlso when multiple teams use the same building block it becomes easier to resolve security issues since a single update is enough instead of many teams finding and trailing the same issue.\nThe building block approachs also tends to improve the building block code base since multiple teams are using the same block and issues are found faster."}),"\n",(0,a.jsx)(n.p,{children:"Other alternatives for a building block is a collection of API calls that can be used to create a certain feature. Multiple features are based on the same API endpoints but display the data in a different way.\nA API building block therefore allows multiple developers to access the same data layer but work with the same data in different ways."})]})}function d(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>s});var a=t(7294);const o={},i=a.createContext(o);function s(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);