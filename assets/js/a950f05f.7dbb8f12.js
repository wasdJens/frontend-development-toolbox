"use strict";(self.webpackChunkdocusaurus_docs=self.webpackChunkdocusaurus_docs||[]).push([[502],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),u=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},k=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=u(t),k=r,m=c["".concat(s,".").concat(k)]||c[k]||d[k]||l;return t?a.createElement(m,i(i({ref:n},p),{},{components:t})):a.createElement(m,i({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=k;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[c]="string"==typeof e?e:r,i[1]=o;for(var u=2;u<l;u++)i[u]=t[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}k.displayName="MDXCreateElement"},6476:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var a=t(7462),r=(t(7294),t(3905));const l={sidebar_position:2},i="Grundlagen",o={unversionedId:"learning/javascript/basics",id:"learning/javascript/basics",title:"Grundlagen",description:"Lernziele",source:"@site/docs/learning/javascript/basics.mdx",sourceDirName:"learning/javascript",slug:"/learning/javascript/basics",permalink:"/software-engineering-toolbox/docs/learning/javascript/basics",draft:!1,editUrl:"https://github.com/wasdJens/software-engineering-toolbox/docs/learning/javascript/basics.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"learningSidebar",previous:{title:"Introduction",permalink:"/software-engineering-toolbox/docs/learning/javascript/intro"},next:{title:"Control Flow",permalink:"/software-engineering-toolbox/docs/learning/javascript/control-flow"}},s={},u=[{value:"Lernziele",id:"lernziele",level:2},{value:"R\xfcckblick",id:"r\xfcckblick",level:2},{value:"Javascript im Browser",id:"javascript-im-browser",level:2},{value:"Variablen",id:"variablen",level:2},{value:"Deklaration",id:"deklaration",level:3},{value:"Zuweisung von Werten",id:"zuweisung-von-werten",level:3},{value:"Konstanten",id:"konstanten",level:3},{value:"Datentypen",id:"datentypen",level:2},{value:"Datentypen: Number",id:"datentypen-number",level:3},{value:"Datentypen: String",id:"datentypen-string",level:3},{value:"Datentypen: Boolean",id:"datentypen-boolean",level:3},{value:"Datentypen: null &amp; undefined",id:"datentypen-null--undefined",level:3},{value:"Datentypen: Objekte",id:"datentypen-objekte",level:3},{value:"Datentypen: Typeof operator",id:"datentypen-typeof-operator",level:3},{value:"Recap",id:"recap",level:2},{value:"\xdcbung",id:"\xfcbung",level:2}],p={toc:u},c="wrapper";function d(e){let{components:n,...l}=e;return(0,r.kt)(c,(0,a.Z)({},p,l,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"grundlagen"},"Grundlagen"),(0,r.kt)("h2",{id:"lernziele"},"Lernziele"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Was ist Javascript"),(0,r.kt)("li",{parentName:"ul"},"Wie kann ich Variablen definieren"),(0,r.kt)("li",{parentName:"ul"},"Was sind Objekte in Javascript"),(0,r.kt)("li",{parentName:"ul"},"Was sind Datentypen in Javascript")),(0,r.kt)("h2",{id:"r\xfcckblick"},"R\xfcckblick"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Javascript wurde 1995 eingef\xfchrt, um Programme f\xfcr Webseiten zu schreiben"),(0,r.kt)("li",{parentName:"ul"},"Mittlerweile ist Javascript Teil von jedem modernen Browser und erm\xf6glicht die Interaktion mit Webseiten ohne diese neu-zuladen"),(0,r.kt)("li",{parentName:"ul"},"Javascript hat nichts mit Java zu tun"),(0,r.kt)("li",{parentName:"ul"},"Der Standard f\xfcr Javascript wird als ECMAScript bezeichnet",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Beschreibt wie Javascript funktioniert"),(0,r.kt)("li",{parentName:"ul"},"Nicht jeder Browser supportet jedes Javascript Feature (vgl. Internet Explorer)")))),(0,r.kt)("h2",{id:"javascript-im-browser"},"Javascript im Browser"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Jeder mit einem Browser kann Javascript schreiben",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\xd6ffnet ein neues Browser Fenster und \xf6ffnet die Entwickler Konsole (F12 oder Rechtsklick auf der Seite)")))),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Browser Open Console",src:t(9686).Z,width:"1923",height:"984"})),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Browser Console Sample",src:t(4622).Z,width:"1586",height:"984"})),(0,r.kt)("h2",{id:"variablen"},"Variablen"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Variablen bilden die Grundlagen, um Daten zu speichern",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Bspw. M\xf6chten wir auf unserer Webseite Daten \xfcber den Benutzer speichern"))),(0,r.kt)("li",{parentName:"ul"},"In JS gibt es drei M\xf6glichkeiten Variablen zu definieren",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Eine Variable ist immer ein named storage f\xfcr Daten"),(0,r.kt)("li",{parentName:"ul"},"Variablen k\xf6nnen beliebige Werte annehmen")))),(0,r.kt)("h3",{id:"deklaration"},"Deklaration"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Die folgenden Statements deklarieren eine Variable in JS")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let firstVariable;\n\nconst secondVariable;\n\nvar thirdVariable;\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Historisch bedingt gibt es das var keyword noch.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Man sollte immer ",(0,r.kt)("inlineCode",{parentName:"li"},"let")," und ",(0,r.kt)("inlineCode",{parentName:"li"},"const")," verwenden.")))),(0,r.kt)("h3",{id:"zuweisung-von-werten"},"Zuweisung von Werten"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Werte k\xf6nnen mit ",(0,r.kt)("inlineCode",{parentName:"li"},"=")," Variablen zugewiesen werden")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'let firstVariable;\nfirstVariable = "Hello";\n\n// Alternative\nlet firstVariable = "Hello";\n')),(0,r.kt)("h3",{id:"konstanten"},"Konstanten"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Konstante definieren in Javascript",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Keyword ",(0,r.kt)("inlineCode",{parentName:"li"},"const")),(0,r.kt)("li",{parentName:"ul"},"Konstante Variablen k\xf6nnen nicht \xfcberschrieben werden")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const myConstant = "Hello";\nmyConstant = "Changed" // Error\n')),(0,r.kt)("h2",{id:"datentypen"},"Datentypen"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Ein Wert in Javascript hat immer einen Datentyp"),(0,r.kt)("li",{parentName:"ul"},"In JavaScript gibt es 8 Datentypen (Symbol betrachten wir hier nicht)"),(0,r.kt)("li",{parentName:"ul"},"Javascript ist ",(0,r.kt)("strong",{parentName:"li"},"dynamisch typisiert"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Das bedeutet einer Variable ist kein explizierter Datentyp zugeordnet "),(0,r.kt)("li",{parentName:"ul"},"Ein Datentyp von einer Variable kann \xfcberschrieben werden")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'let input = "Foo";\ninput = 1337;\n')),(0,r.kt)("h3",{id:"datentypen-number"},"Datentypen: Number"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"In JavaScript k\xf6nnen Numbers Integer und Float Werte annehmen"),(0,r.kt)("li",{parentName:"ul"},"Zus\xe4tzlich gibt es noch BigInt (Zahlen > 2^53\u22121)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let number = 1337;\nnumber = 42.42;\n\nconst largeNumber = BigInt(9007199254740991)\n")),(0,r.kt)("h3",{id:"datentypen-string"},"Datentypen: String"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Strings in JavaScruot k\xf6nnen entweder mit ",(0,r.kt)("inlineCode",{parentName:"li"},'"')," oder ",(0,r.kt)("inlineCode",{parentName:"li"},"'")," deklariert werden"),(0,r.kt)("li",{parentName:"ul"},"String Verkettung mittels ",(0,r.kt)("inlineCode",{parentName:"li"},"+"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const aString = "Hello World";\nconst bString = \'Hello World\'\';\n\nconst h = "Hello";\nconst w = "World";\nconsole.log(h + " " + w);\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Template Strings sind eine besondere Art strings zu definieren"),(0,r.kt)("li",{parentName:"ul"},"Mit einem backtick ``` k\xf6nnen Strings definieren werden, welche gleichzeitig Funktionen ausf\xfchren k\xf6nnen"),(0,r.kt)("li",{parentName:"ul"},"So lassen sich Variablen direkt in einem String ausgeben")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const number = 800;\nconst price = `The price of the new phone is ${number}`;\nconsole.log(price); // The price of the new phone is 800\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const phone = 800;\nconst discount = 25;\nconst price = `The price of the new phone is ${phone - ((phone / 100) * discount)}`;\nconsole.log(price); // The price of the new phone is 600 \n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const phone = 800;\nconst discount = 25;\nconst price = `The price of the new phone is ${phone} with a discount of ${discount}`;\nconsole.log(price);\n")),(0,r.kt)("h3",{id:"datentypen-boolean"},"Datentypen: Boolean"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Der Logische Datentyp welcher nur zwei Zust\xe4nde annehmen kann ")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const confirmed = false;\nconst approved = true;\n")),(0,r.kt)("h3",{id:"datentypen-null--undefined"},"Datentypen: null & undefined"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"In Javascript gibt es zwei spezielle Datentypen null und undefined"),(0,r.kt)("li",{parentName:"ul"},"null repr\xe4sentiert nothing, empty oder wert unbekannt"),(0,r.kt)("li",{parentName:"ul"},"undefined hingegen bedeutet, dass einer Variable noch kein Wert zugewiesen wurde")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const username = null;\n\nconst email;\nconsole.log(email) // undefined\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"null kann also speziell verwendet werden, um eine Variable als leer oder unbekannt zu deklarieren"),(0,r.kt)("li",{parentName:"ul"},"undefined hingegen symbolisiert das eine Variable keinen Wert hat")),(0,r.kt)("h3",{id:"datentypen-objekte"},"Datentypen: Objekte"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Objekte in JavaScript sind der wichtigste Datentyp"),(0,r.kt)("li",{parentName:"ul"},"Objekte k\xf6nnen verschiedene Properties beinhalten"),(0,r.kt)("li",{parentName:"ul"},"Jedes Property hat einen Wert"),(0,r.kt)("li",{parentName:"ul"},"Das Property ist dann der Schl\xfcssel, um auf den Wert zuzugreifen")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const user = {\n  name: "Jens",\n  age: 26,\n  gender: "m",\n  isAdmin: true\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Objekte k\xf6nnen mit ",(0,r.kt)("inlineCode",{parentName:"li"},"{}")," definiert werden"),(0,r.kt)("li",{parentName:"ul"},"Objekte k\xf6nnen Variablen zugeordnert werden")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const phone = {\n  manufacturer: "Apple",\n  model: "iPhone",\n  storage: 128,\n  isReleased: false\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Objekte k\xf6nnen auch leer definiert werden"),(0,r.kt)("li",{parentName:"ul"},"Objekte haben einen key und einen dazugeh\xf6rigen wert ",(0,r.kt)("inlineCode",{parentName:"li"},"{ <key> : <value> }")),(0,r.kt)("li",{parentName:"ul"},"Properties k\xf6nnen wir einfach auslesen in einem Objekt  (-> ",(0,r.kt)("inlineCode",{parentName:"li"},".")," notation)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"console.log(user.name) // => Jens\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Properties k\xf6nnen jeden Datentyp beinhalten"),(0,r.kt)("li",{parentName:"ul"},"Neue Werte k\xf6nnen mit der ",(0,r.kt)("inlineCode",{parentName:"li"},".")," Notation auch hinzugef\xfcgt werden")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'let machine = {\n  serialNo: 1234,\n  name: "Fast Machine"\n}\nmachine.price = 2500;\nconsole.log(machine); // Object { serialNo: 1234, name: "Fast Machine", price: 2500}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Properties entfernt man mit dem ",(0,r.kt)("inlineCode",{parentName:"li"},"delete")," keyword")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'delete machine.price\nconsole.log(machine); // Object { serialNo: 1234, name: "Fast Machine" }\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Properties ver\xe4ndern mit der ",(0,r.kt)("inlineCode",{parentName:"li"},".")," Notation")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'machine.serialNo = 42;\nconsole.log(machine); // Object { serialNo: 42, name: "Fast Machine" }\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Der key von einer property kann auch ein multi-word sein")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const factory = {\n  "construction site": "Heidenheim an der Brenz"\n};\nconsole.log(factory);\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Die ",(0,r.kt)("inlineCode",{parentName:"li"},".")," Notiation funktioniert in diesem Fall nicht mehr"),(0,r.kt)("li",{parentName:"ul"},"Um auf eine multi-word property zuzugreifen verwendet man ",(0,r.kt)("inlineCode",{parentName:"li"},"[ ]")," (Square bracket notiation)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'console.log(factory["construction site"]); // Heidenheim an der Brenz\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Die square bracket notiation funktioniert auch f\xfcr Variablen ")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const key = "consturction site"\nconsole.log(factory[key]); // Heidenheim an der Brenz\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Die square bracket notation kann auch keys in properties definieren (Computed properties)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const fruit = "apple";\nconst bag = {\n  [fruit]: 5\n}\nconsole.log(bag) // Object {\xa0apple: 5}\n')),(0,r.kt)("h3",{id:"datentypen-typeof-operator"},"Datentypen: Typeof operator"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Um in Javascript herauszufinden was f\xfcr ein Datentypen eine Variable ist gibt es eine speziellen Operator ",(0,r.kt)("inlineCode",{parentName:"li"},"typeof"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const price = 25;\nconsole.log(typeof price); // number\nconsole.log(typeof "Foo"); // string\nconsole.log(typeof null); // object\n')),(0,r.kt)("h2",{id:"recap"},"Recap"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Javascript hat 8 unterschiedliche Datentypen"),(0,r.kt)("li",{parentName:"ul"},"Javascript ist dynamisch typisiert d.h. eine Variable kann mehrere Datentypen zur Laufzeit annehmen"),(0,r.kt)("li",{parentName:"ul"},"Der wichtigste Datentyp ist Object, um komplexe Datenstrukturen abzubilden"),(0,r.kt)("li",{parentName:"ul"},"undefined und null sind spezielle Datentypen",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"null")," sollte immer als \u201eleerer\u201c Wert gesehen werden"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"undefined")," ist eine variable ohne wert")))),(0,r.kt)("h2",{id:"\xfcbung"},"\xdcbung"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Definieren Sie sich 10 unterschiedliche Variablen"),(0,r.kt)("li",{parentName:"ul"},"Definieiren Sie sich zwei Objekte"),(0,r.kt)("li",{parentName:"ul"},"Ver\xe4ndern Sie die Werter ihrer Variablen")))}d.isMDXComponent=!0},9686:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/JS1-295684a6a230c9c6c9e978fad56bf4f3.png"},4622:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/JS2-b3e90ed02f9d3167d9a9a49672436135.png"}}]);